from flask import Blueprint, render_template, request, redirect, url_for
from flask_login import login_user, logout_user
from flask_login.utils import login_required
from werkzeug.security import check_password_hash

from app.extensions import db
from app.models import User

auth = Blueprint('auth', __name__)

@auth.route('/register', methods=['GET', 'POST'])
def register():
    error = False
    form = request.form
    if request.method == 'POST':
        name = request.form['name']
        unhashed_password = request.form['password']
        exist_user = User.query.filter_by(name=name).first()
        if exist_user:
            error = True
        if not exist_user:    
            user = User(
                name=name, 
                unhashed_password=unhashed_password,
                admin=False,  
                expert=False,
            )
            db.session.add(user)
            db.session.commit()
            return redirect(url_for('auth.login'))
    context = {
        'error':error
    }
    return render_template('register.html',**context,form=form)



@auth.route('/login', methods=['GET', 'POST'])
def login():
    error = False
    form = request.form
    if request.method == 'POST':
        name = request.form['name']
        password = request.form['password']
        user = User.query.filter_by(name=name).first()
        error_message = ''
        if not user or not check_password_hash(user.password, password) or user.name == 'Admin':
            error_message = 'Could not login. Please check and try again.'
            error = True
        if not error_message:
            login_user(user)
            return redirect(url_for('main.index'))

    context = {
       'error' : error
    }
    return render_template('login.html',**context,form=form)



@auth.route('/logout')
def logout():
    logout_user()
    return redirect(url_for('auth.login'))

"""
@auth.route('/admin', methods=['GET', 'POST'])
def adminpanel():
    error = False
    
    if request.method == 'POST':
        name = request.form['name']
        password = request.form['password']
        user = User.query.filter_by(name=name).first()
        error_message = ''
        print(type(user))
        if not user or not check_password_hash(user.password, password) or not user.name == 'Admin':
            error_message = 'Could not login. Please check and try again.'
            error = True
        if not error_message:
            login_user(user)
            return redirect(url_for('main.index'))

    context = {
       'error' : error
    }
    return render_template('admin.html',**context)
"""